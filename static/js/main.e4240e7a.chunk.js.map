{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","components/utils/getUserById.ts","components/TodoForm/TodoForm.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","todoClass","completed","id","title","TodoList","todos","map","username","getUserById","userId","usersFromServer","find","ToDoForm","onSubmit","todoId","users","useState","setTitle","hasTitleError","setHasTitleError","selectedUserId","setSelectedUserId","hasUserIdError","setHasUserIdError","action","method","event","preventDefault","trim","length","htmlFor","type","value","placeholder","onChange","target","disabled","defaultValue","initialTodos","App","setTodos","newTodo","Math","max","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e4240e7a.chunk.js","sourcesContent":["import React from 'react';\n\ntype User = {\n  email: string,\n  name: string;\n};\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../types/Todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const todoClass = todo.completed ? 'TodoInfo--completed' : '';\n\n  return (\n    <article\n      data-id={todo.id}\n      className={`TodoInfo ${todoClass}`}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n      {todo.user && <UserInfo user={todo.user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        todo={todo}\n        key={todo.id}\n      />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../../api/users';\nimport { User } from '../types/User';\n\nexport function getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n}\n","import React, { useState } from 'react';\nimport { Todo } from '../types/Todo';\nimport { User } from '../types/User';\nimport { getUserById } from '../utils/getUserById';\n\ntype Props = {\n  onSubmit: (todo: Todo) => void;\n  todoId: number;\n  users: User[];\n};\n\nexport const ToDoForm: React.FC<Props> = ({ onSubmit, todoId, users }) => {\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const hadleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  const reset = () => {\n    setTitle('');\n    setSelectedUserId(0);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!(title.trim()));\n    setHasUserIdError(!selectedUserId);\n\n    if (title.trim().length === 0 || !selectedUserId) {\n      return;\n    }\n\n    onSubmit({\n      id: todoId,\n      title,\n      completed: false,\n      userId: selectedUserId,\n      user: getUserById(selectedUserId),\n    });\n\n    reset();\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <label htmlFor=\"todo-form-title\">Title:&nbsp;</label>\n        <input\n          type=\"text\"\n          data-cy=\"titleInput\"\n          id=\"todo-form-title\"\n          value={title}\n          placeholder=\"Enter a title\"\n          onChange={handleTitleChange}\n        />\n        {hasTitleError && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"todo-form-user\">User:&nbsp;</label>\n        <select\n          data-cy=\"userSelect\"\n          id=\"todo-form-user\"\n          value={selectedUserId}\n          onChange={hadleUserIdChange}\n        >\n\n          <option value=\"0\" disabled defaultValue=\"0\">\n            Choose a user\n          </option>\n\n          {users.map((user) => (\n            <option value={user.id} key={user.id}>\n              {user.name}\n            </option>\n          ))}\n        </select>\n\n        {hasUserIdError && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\n\nimport { TodoList } from './components/TodoList';\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\nimport { Todo } from './components/types/Todo';\nimport { getUserById } from './components/utils/getUserById';\nimport { ToDoForm } from './components/TodoForm/TodoForm';\n\nconst initialTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(initialTodos);\n\n  const addTodo = (newTodo: Todo) => {\n    setTodos([...todos, newTodo]);\n  };\n\n  const getTodoId = () => {\n    if (todos.length === 0) {\n      return 1;\n    }\n\n    const maxId = Math.max(...todos.map(todo => todo.id));\n\n    return maxId + 1;\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <ToDoForm\n        onSubmit={addTodo}\n        users={usersFromServer}\n        todoId={getTodoId()}\n      />\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}